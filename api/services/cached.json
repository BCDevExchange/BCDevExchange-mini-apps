{
  "open": [],
  "closed": [
    {
      "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/7",
      "repository_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit",
      "labels_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/7/labels{/name}",
      "comments_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/7/comments",
      "events_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/7/events",
      "html_url": "https://github.com/bcgov/citizen-engagement-web-toolkit/issues/7",
      "id": 121821329,
      "number": 7,
      "title": "Upgrade WP Sage Core Commenting - Part Three - Load More",
      "user": {
        "login": "juhewitt",
        "id": 15350676,
        "avatar_url": "https://avatars.githubusercontent.com/u/15350676?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/juhewitt",
        "html_url": "https://github.com/juhewitt",
        "followers_url": "https://api.github.com/users/juhewitt/followers",
        "following_url": "https://api.github.com/users/juhewitt/following{/other_user}",
        "gists_url": "https://api.github.com/users/juhewitt/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/juhewitt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/juhewitt/subscriptions",
        "organizations_url": "https://api.github.com/users/juhewitt/orgs",
        "repos_url": "https://api.github.com/users/juhewitt/repos",
        "events_url": "https://api.github.com/users/juhewitt/events{/privacy}",
        "received_events_url": "https://api.github.com/users/juhewitt/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/$1000",
          "name": "$1000",
          "color": "0052cc"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/Bootstrap",
          "name": "Bootstrap",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/CSS",
          "name": "CSS",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/enhancement",
          "name": "enhancement",
          "color": "84b6eb"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/help%20wanted",
          "name": "help wanted",
          "color": "159818"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/HTML",
          "name": "HTML",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/JavaScript",
          "name": "JavaScript",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/jQuery",
          "name": "jQuery",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/PHP",
          "name": "PHP",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/WordPress",
          "name": "WordPress",
          "color": "eb6420"
        }
      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 22,
      "created_at": "2015-12-12T00:54:18Z",
      "updated_at": "2016-03-08T23:02:07Z",
      "closed_at": "2016-03-08T23:02:02Z",
      "body": "# Load More\r\n## Background\r\nWe are looking to build upon the default core SAGE framework/WP OOTB commenting system.  As fans of the plug and play model, we are trying to accomplish this in a modular way for obvious reasons.  Through UX testing, our audience has identified three short comings to overcome: sorting, filtering and sequential loading.  This ticket, we are going to focus on sequential loading. \r\n\r\n### Story\r\nI want to be able to interact with groupings of comments dynamically so I can restrict the information presented to me for a more effective consultation experience.\r\n\r\n## Acceptance Criteria\r\n1. A user will read through a subset of comments on a page or post and:\r\n  * select 'load more' to view the next subset of comments \r\n  * can continue to select 'load more' until all comments are present \r\n2. A user will read through a subset of replies within a thread on a page or post and:\r\n  * select 'load more' to view the next subset of comments \r\n  * can continue to select 'load more' until all comments are present \r\n3. The admin of the blog can set the number of comments and replies within a set.\r\n4. Ideally, the solution will perform these using AJAX calls.\r\n\r\n## How to contribute\r\n\r\nWe will evaluate each pull request and choose the best solution to the issue based on the acceptance criteria. Submit the best solution and you could be paid $1000.\r\n\r\nMore than one pull request may be considered for payment on this issue.\r\n\r\nPlease read the [Contribution Guidelines] (https://github.com/bcgov/citizen-engagement-web-toolkit/blob/master/CONTRIBUTING.md) for the Terms that set the rules for participation in a Pay for Pull, including how you’ll get paid if you are successful.\r\n\r\nHave questions? Please post your questions in the comments section below this issue.\r\n\r\nAnd check out our [Partners page] (https://bcdevexchange.org/programs/Citizen%20Engagement%20Web%20Toolkit)  for more information on our work.",
      "program": "Citizen Engagement Web Toolkit",
      "skill": [
        "Bootstrap",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "PHP",
        "WordPress"
      ],
      "earn": [
        "$1000"
      ]
    },
    {
      "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/6",
      "repository_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit",
      "labels_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/6/labels{/name}",
      "comments_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/6/comments",
      "events_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/6/events",
      "html_url": "https://github.com/bcgov/citizen-engagement-web-toolkit/issues/6",
      "id": 121796073,
      "number": 6,
      "title": "Upgrade WP Sage Core Commenting - Part Two - Filtering",
      "user": {
        "login": "juhewitt",
        "id": 15350676,
        "avatar_url": "https://avatars.githubusercontent.com/u/15350676?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/juhewitt",
        "html_url": "https://github.com/juhewitt",
        "followers_url": "https://api.github.com/users/juhewitt/followers",
        "following_url": "https://api.github.com/users/juhewitt/following{/other_user}",
        "gists_url": "https://api.github.com/users/juhewitt/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/juhewitt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/juhewitt/subscriptions",
        "organizations_url": "https://api.github.com/users/juhewitt/orgs",
        "repos_url": "https://api.github.com/users/juhewitt/repos",
        "events_url": "https://api.github.com/users/juhewitt/events{/privacy}",
        "received_events_url": "https://api.github.com/users/juhewitt/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/$1000",
          "name": "$1000",
          "color": "0052cc"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/Bootstrap",
          "name": "Bootstrap",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/CSS",
          "name": "CSS",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/enhancement",
          "name": "enhancement",
          "color": "84b6eb"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/help%20wanted",
          "name": "help wanted",
          "color": "159818"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/HTML",
          "name": "HTML",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/JavaScript",
          "name": "JavaScript",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/jQuery",
          "name": "jQuery",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/PHP",
          "name": "PHP",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/WordPress",
          "name": "WordPress",
          "color": "eb6420"
        }
      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 8,
      "created_at": "2015-12-11T21:36:28Z",
      "updated_at": "2016-03-15T17:42:37Z",
      "closed_at": "2016-03-15T17:42:34Z",
      "body": "# Filtering\r\n## Background\r\nWe are looking to build upon the default core SAGE framework/WP OOTB commenting system.  As fans of the plug and play model, we are trying to accomplish this in a modular way for obvious reasons.  Through UX testing, our audience has identified three short comings to overcome: sorting, filtering and sequential loading.  This ticket, we are going to focus on Filtering. \r\n\r\n### Story\r\nI want to be able to filter comments by date or keywords so that I can find information more easily and participate in consultations more effectively.\r\n\r\n## Acceptance Criteria\r\n1. A user can filter information through a date field: \r\n  * by today's date\r\n  * by week \r\n  * by month\r\n2. A user can filter information through a search field, by:\r\n  * keywords from within comment fields\r\n  * keywords associated with author name\r\n3. The results will return comments, in the same default format.\r\n4. Ideally, the solution will perform these using AJAX calls.\r\n\r\n## How to contribute\r\n\r\nWe will evaluate each pull request and choose the best solution to the issue based on the acceptance criteria. Submit the best solution and you could be paid $1000.\r\n\r\nMore than one pull request may be considered for payment on this issue.\r\n\r\nPlease read the [Contribution Guidelines] (https://github.com/bcgov/citizen-engagement-web-toolkit/blob/master/CONTRIBUTING.md) for the Terms that set the rules for participation in a Pay for Pull, including how you’ll get paid if you are successful.\r\n\r\nHave questions? Please post your questions in the comments section below this issue.\r\n\r\nAnd check out our [Partners page] (https://bcdevexchange.org/programs/Citizen%20Engagement%20Web%20Toolkit)  for more information on our work.",
      "program": "Citizen Engagement Web Toolkit",
      "skill": [
        "Bootstrap",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "PHP",
        "WordPress"
      ],
      "earn": [
        "$1000"
      ]
    },
    {
      "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/5",
      "repository_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit",
      "labels_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/5/labels{/name}",
      "comments_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/5/comments",
      "events_url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/issues/5/events",
      "html_url": "https://github.com/bcgov/citizen-engagement-web-toolkit/issues/5",
      "id": 121777657,
      "number": 5,
      "title": "Upgrade WP Sage Core Commenting - Part One - Sorting",
      "user": {
        "login": "juhewitt",
        "id": 15350676,
        "avatar_url": "https://avatars.githubusercontent.com/u/15350676?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/juhewitt",
        "html_url": "https://github.com/juhewitt",
        "followers_url": "https://api.github.com/users/juhewitt/followers",
        "following_url": "https://api.github.com/users/juhewitt/following{/other_user}",
        "gists_url": "https://api.github.com/users/juhewitt/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/juhewitt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/juhewitt/subscriptions",
        "organizations_url": "https://api.github.com/users/juhewitt/orgs",
        "repos_url": "https://api.github.com/users/juhewitt/repos",
        "events_url": "https://api.github.com/users/juhewitt/events{/privacy}",
        "received_events_url": "https://api.github.com/users/juhewitt/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/$1000",
          "name": "$1000",
          "color": "0052cc"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/Bootstrap",
          "name": "Bootstrap",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/CSS",
          "name": "CSS",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/enhancement",
          "name": "enhancement",
          "color": "84b6eb"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/help%20wanted",
          "name": "help wanted",
          "color": "159818"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/HTML",
          "name": "HTML",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/JavaScript",
          "name": "JavaScript",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/jQuery",
          "name": "jQuery",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/PHP",
          "name": "PHP",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/citizen-engagement-web-toolkit/labels/WordPress",
          "name": "WordPress",
          "color": "eb6420"
        }
      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 19,
      "created_at": "2015-12-11T19:37:22Z",
      "updated_at": "2016-02-23T00:19:34Z",
      "closed_at": "2016-02-11T23:27:44Z",
      "body": "# Sorting\r\n## Background\r\nWe are looking to build upon the default core SAGE framework/WP OOTB commenting system.  As fans of the plug and play model, we are trying to accomplish this in a modular way for obvious reasons.  Through UX testing, our audience has identified three short comings to overcome: sorting, filtering and sequential loading.  This ticket, we are going to focus on Sorting.\r\n\r\n### Story\r\nI want to be able to sort blog comments by date and number of replies so that I can find information more easily to engage in consultations. \r\n\r\n## Acceptance Criteria\r\n1. A user selects a sort by date toggle: \r\n  * the initial state is most recent.  \r\n  * Toggle and the comments are returned by oldest.  \r\n  * Toggle again and the sort and the comments are returned by most recent.\r\n2. A user selects to sort by number of replies toggle, the initial state is default, with no sort applied at all. \r\n  * Toggle once and the comments are returned by the highest number of replies, \r\n  * toggle twice and the comments are returned by the least number of replies, \r\n  * and finally toggle three times and the comments are returned at the default.  \r\n3.  Ideally, the solution will have AJAX response for UX.\r\n\r\n## How to contribute\r\n\r\nWe will evaluate each pull request and choose the best solution to the issue based on the acceptance criteria. Submit the best solution and you could be paid $1000.\r\n\r\nMore than one pull request may be considered for payment on this issue.\r\n\r\nPlease read the [Contribution Guidelines] (https://github.com/bcgov/citizen-engagement-web-toolkit/blob/master/CONTRIBUTING.md) for the Terms that set the rules for participation in a Pay for Pull, including how you’ll get paid if you are successful.\r\n\r\nHave questions? Please post your questions in the comments section below this issue.\r\n\r\nAnd check out our [Partners page] (https://bcdevexchange.org/programs/Citizen%20Engagement%20Web%20Toolkit)  for more information on our work.",
      "program": "Citizen Engagement Web Toolkit",
      "skill": [
        "Bootstrap",
        "CSS",
        "HTML",
        "JavaScript",
        "jQuery",
        "PHP",
        "WordPress"
      ],
      "earn": [
        "$1000"
      ]
    },
    {
      "url": "https://api.github.com/repos/bcgov/bc-laws-api/issues/4",
      "repository_url": "https://api.github.com/repos/bcgov/bc-laws-api",
      "labels_url": "https://api.github.com/repos/bcgov/bc-laws-api/issues/4/labels{/name}",
      "comments_url": "https://api.github.com/repos/bcgov/bc-laws-api/issues/4/comments",
      "events_url": "https://api.github.com/repos/bcgov/bc-laws-api/issues/4/events",
      "html_url": "https://github.com/bcgov/bc-laws-api/issues/4",
      "id": 104784241,
      "number": 4,
      "title": "Favourites Tree Threshold Limit Break",
      "user": {
        "login": "kelpisland",
        "id": 9368818,
        "avatar_url": "https://avatars.githubusercontent.com/u/9368818?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kelpisland",
        "html_url": "https://github.com/kelpisland",
        "followers_url": "https://api.github.com/users/kelpisland/followers",
        "following_url": "https://api.github.com/users/kelpisland/following{/other_user}",
        "gists_url": "https://api.github.com/users/kelpisland/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kelpisland/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kelpisland/subscriptions",
        "organizations_url": "https://api.github.com/users/kelpisland/orgs",
        "repos_url": "https://api.github.com/users/kelpisland/repos",
        "events_url": "https://api.github.com/users/kelpisland/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kelpisland/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/bcgov/bc-laws-api/labels/bug",
          "name": "bug",
          "color": "fc2929"
        },
        {
          "url": "https://api.github.com/repos/bcgov/bc-laws-api/labels/help%20wanted",
          "name": "help wanted",
          "color": "159818"
        },
        {
          "url": "https://api.github.com/repos/bcgov/bc-laws-api/labels/Java",
          "name": "Java",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/bc-laws-api/labels/jQuery",
          "name": "jQuery",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/bc-laws-api/labels/JSON",
          "name": "JSON",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/bc-laws-api/labels/restAPI",
          "name": "restAPI",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/bc-laws-api/labels/XML",
          "name": "XML",
          "color": "eb6420"
        }
      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 19,
      "created_at": "2015-09-03T21:20:00Z",
      "updated_at": "2016-06-17T18:17:04Z",
      "closed_at": "2016-06-07T20:50:48Z",
      "body": "<a rel=\"Inspiration\" href=\"https://github.com/BCDevExchange/docs/blob/master/discussion/projectstates.md\"><img alt=\"An idea being explored and shaped. Open for discussion, but may never go anywhere.\" style=\"border-width:0\" src=\"http://bcdevexchange.org/badge/1.svg\" title=\"An idea being explored and shaped. Open for discussion, but may never go anywhere.\" /></a> \r\n\r\n# Story:\r\n\r\nAs a product owner I have discovered that the favourites tree is not working correctly as there is a threshold after which the favourites content tree becomes non-functional.\r\n\r\n \r\n\r\n# Additional detail:\r\n\r\n \r\n\r\nGoto: http://www.bclaws.ca/civix/content/complete/statreg/?xsl=/templates/browse.xsl and click on Favourites. As a “Content Distributor” the user may already have a favourites tree but when they point a lot of content at it (Goto: http://www.bclaws.ca/civix/content/arch_oic/arc_oic/?xsl=/templates/browse.xsl) the content tree becomes overwhelmed; so as an interim solution it was removed. So it’s not so much that the piece of work is adding documents, this is done through the application layer and consumed through the API interface, but that as I add documents the trees performance degrades to an unacceptable level.\r\n\r\n \r\n\r\n# Acceptance criteria:\r\n\r\n1. Javascript tree contains a list of nodes that users can select.\r\n\r\n2. Tree is created using the content API as described: http://www.bclaws.ca/civix/template/complete/api/EP_API_content.html\r\n\r\n3. Selected nodes are stored in a cookie called favIDS, as a list of ancestors separated by comma. Each selection/deselection of a folder/document updates the cookie and adds/deletes the corresponding ancestor to the listTree and should default open to the lowest complete branch. Examples:\r\n\r\n\t* If “A” is selected in its entirety Tree should open to the “A” folder\r\n\r\n\t* If “Access to Education” is selected in its entirety Tree should open to “Access to Education”\r\n\r\n\t* If “Access to Education” and the “P” folder is selected in its entirety the Tree should open to both “Access to Education” and the “P” folder\r\n\r\n4. The list should also be adjusted such that if a parent is selected, the parent ancestor is added to the list and existing children ancestors are deleted.\r\n\r\n5. The Advanced favourite search feature will grab all the ancestors in the cookie. If html5 storage is present, it is used instead of the cookie.\r\n\r\n6. Tree must be able to be cleared using the clear favourites as per:\r\nhttp://www.bclaws.ca/civix/content/complete/statreg/?xsl=/templates/browse.xsl\r\n\r\n7. Tree should not substantially degrade in performance when used against larger document collections such as the Historical OIC collection:\r\nhttp://www.bclaws.ca/civix/content/arch_oic/arc_oic/\r\n\r\n8. Tree should outperform current tree load time by 3X when initially loaded with browser session information cleared. Firefox web-developer profiler will be used to determine the success of the test.\r\n\r\n# How to contribute\r\n\r\nWe will evaluate each pull request and choose the best solution to the issue based on the acceptance criteria. Submit the best solution and you could be paid $1000.\r\n\r\nMore than one pull request may be considered for payment on this issue.\r\n\r\nPlease read the [Contribution Guidelines](https://github.com/bcgov/bc-laws-api/blob/master/CONTRIBUTING.md) for the Terms that set the rules for participation in a Pay for Pull, including how you’ll get paid if you are successful.\r\n\r\nHave questions? Please post your questions in the comments section below this issue.\r\n\r\nAnd check out our [Partners page](https://bcdevexchange.org/programs/BC%20Laws) for more information on our work.",
      "program": "BC Laws",
      "skill": [
        "Java",
        "jQuery",
        "JSON",
        "restAPI",
        "XML"
      ],
      "earn": []
    },
    {
      "url": "https://api.github.com/repos/BCDevExchange/BCDevExchange-app/issues/297",
      "repository_url": "https://api.github.com/repos/BCDevExchange/BCDevExchange-app",
      "labels_url": "https://api.github.com/repos/BCDevExchange/BCDevExchange-app/issues/297/labels{/name}",
      "comments_url": "https://api.github.com/repos/BCDevExchange/BCDevExchange-app/issues/297/comments",
      "events_url": "https://api.github.com/repos/BCDevExchange/BCDevExchange-app/issues/297/events",
      "html_url": "https://github.com/BCDevExchange/BCDevExchange-app/issues/297",
      "id": 157277364,
      "number": 297,
      "title": "Simulate payment acceptance using alternative CC mechanism (other than PP)",
      "user": {
        "login": "paulroberts68",
        "id": 11237533,
        "avatar_url": "https://avatars.githubusercontent.com/u/11237533?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulroberts68",
        "html_url": "https://github.com/paulroberts68",
        "followers_url": "https://api.github.com/users/paulroberts68/followers",
        "following_url": "https://api.github.com/users/paulroberts68/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulroberts68/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulroberts68/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulroberts68/subscriptions",
        "organizations_url": "https://api.github.com/users/paulroberts68/orgs",
        "repos_url": "https://api.github.com/users/paulroberts68/repos",
        "events_url": "https://api.github.com/users/paulroberts68/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulroberts68/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/BCDevExchange/BCDevExchange-app/labels/$5",
          "name": "$5",
          "color": "0052cc"
        },
        {
          "url": "https://api.github.com/repos/BCDevExchange/BCDevExchange-app/labels/help%20wanted",
          "name": "help wanted",
          "color": "159818"
        }
      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/BCDevExchange/BCDevExchange-app/milestones/21",
        "html_url": "https://github.com/BCDevExchange/BCDevExchange-app/milestones/Release%206",
        "labels_url": "https://api.github.com/repos/BCDevExchange/BCDevExchange-app/milestones/21/labels",
        "id": 1723271,
        "number": 21,
        "title": "Release 6",
        "description": "Pre-summer goals",
        "creator": {
          "login": "paulroberts68",
          "id": 11237533,
          "avatar_url": "https://avatars.githubusercontent.com/u/11237533?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/paulroberts68",
          "html_url": "https://github.com/paulroberts68",
          "followers_url": "https://api.github.com/users/paulroberts68/followers",
          "following_url": "https://api.github.com/users/paulroberts68/following{/other_user}",
          "gists_url": "https://api.github.com/users/paulroberts68/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/paulroberts68/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/paulroberts68/subscriptions",
          "organizations_url": "https://api.github.com/users/paulroberts68/orgs",
          "repos_url": "https://api.github.com/users/paulroberts68/repos",
          "events_url": "https://api.github.com/users/paulroberts68/events{/privacy}",
          "received_events_url": "https://api.github.com/users/paulroberts68/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 10,
        "closed_issues": 2,
        "state": "open",
        "created_at": "2016-04-21T16:38:03Z",
        "updated_at": "2016-06-03T21:52:52Z",
        "due_on": "2016-06-30T07:00:00Z",
        "closed_at": null
      },
      "comments": 14,
      "created_at": "2016-05-27T19:40:10Z",
      "updated_at": "2016-05-31T16:58:23Z",
      "closed_at": "2016-05-27T22:51:54Z",
      "body": "## Background\r\nWe have received feedback that developers would like the option to use their own credit card payment system instead of PayPay to receive payment for Pay for Pull opportunities.\r\n\r\n### Story\r\nAs a product owner I need to understand what financial artifacts are provided by other credit card acceptance mechanisms (other than PayPal) so that we can determine if we can use these mechanisms as part of the P4P process in the near future. \r\n\r\n## Acceptance Criteria\r\n\r\n1.  Follow the Contributing Guidelines and send us a Pull Request to this repository.\r\n2. In the comments section of the Pull Request, include completed copy of the Pay for Pull Terms found in this repo that includes your name and email.\r\n3. In the comments section of the Pull Request, include a link to an invoice for $5 generated by your credit card payment system that must be different than PayPal.\r\n5. Upon receipt of payment generate a downloadable receipt of payment with your business information.\r\n\r\n. \r\n\r\n## How to contribute\r\n\r\nWe will evaluate each pull request and choose the best solution to the issue based on the acceptance criteria. Submit the best solution and you could be paid $5 (THIS IS TEST).\r\n\r\n\r\nPlease read the (Contribution Guidelines)[https://github.com/BCDevExchange/BCDevExchange-app/blob/master/CONTRIBUTING.md] for the Terms that set the rules for participation in a Pay for Pull, including how you’ll get paid if you are successful.\r\n\r\nHave questions? Please post your questions in the comments section below this issue.\r\n\r\nAnd check out our (Partners page)[https://bcdevexchange.org/programs/BCDevExchange] for more information on our work.\r\n",
      "program": "BCDevExchange",
      "skill": [],
      "earn": [
        "$5"
      ]
    },
    {
      "url": "https://api.github.com/repos/bcgov/databc-web-map-services/issues/1",
      "repository_url": "https://api.github.com/repos/bcgov/databc-web-map-services",
      "labels_url": "https://api.github.com/repos/bcgov/databc-web-map-services/issues/1/labels{/name}",
      "comments_url": "https://api.github.com/repos/bcgov/databc-web-map-services/issues/1/comments",
      "events_url": "https://api.github.com/repos/bcgov/databc-web-map-services/issues/1/events",
      "html_url": "https://github.com/bcgov/databc-web-map-services/issues/1",
      "id": 154350307,
      "number": 1,
      "title": "KML Placemarks not located correctly (Geoserver 2.8.x)",
      "user": {
        "login": "myopic73",
        "id": 8550351,
        "avatar_url": "https://avatars.githubusercontent.com/u/8550351?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/myopic73",
        "html_url": "https://github.com/myopic73",
        "followers_url": "https://api.github.com/users/myopic73/followers",
        "following_url": "https://api.github.com/users/myopic73/following{/other_user}",
        "gists_url": "https://api.github.com/users/myopic73/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/myopic73/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/myopic73/subscriptions",
        "organizations_url": "https://api.github.com/users/myopic73/orgs",
        "repos_url": "https://api.github.com/users/myopic73/repos",
        "events_url": "https://api.github.com/users/myopic73/events{/privacy}",
        "received_events_url": "https://api.github.com/users/myopic73/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/bcgov/databc-web-map-services/labels/$1000",
          "name": "$1000",
          "color": "0052cc"
        },
        {
          "url": "https://api.github.com/repos/bcgov/databc-web-map-services/labels/bug",
          "name": "bug",
          "color": "fc2929"
        },
        {
          "url": "https://api.github.com/repos/bcgov/databc-web-map-services/labels/GeoServer",
          "name": "GeoServer",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/databc-web-map-services/labels/help%20wanted",
          "name": "help wanted",
          "color": "159818"
        },
        {
          "url": "https://api.github.com/repos/bcgov/databc-web-map-services/labels/Java",
          "name": "Java",
          "color": "eb6420"
        }
      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 22,
      "created_at": "2016-05-11T21:45:33Z",
      "updated_at": "2016-06-01T21:38:36Z",
      "closed_at": "2016-06-01T21:38:36Z",
      "body": "## Background\r\nWe currently use [GeoServer](http://geoserver.org/), and it's great, except for a little bug. KML Placemarks do not correctly locate when there is a KMSCORE=0 and mode=refresh for SDE EPSG:3005 polygon data. The ground overlay returned is correct, but the KML placemarks don't look like the coordinates have been converted from the native SRS of EPSG:3005. See the bug ticket here posted in the GeoServer community: [https://osgeo-org.atlassian.net/browse/GEOS-7369](https://osgeo-org.atlassian.net/browse/GEOS-7369)\r\n\r\nWe use GeoServer for our WMS services which outputs KML of spatial data housed in the BC Warehouse. The WMS services are accessible to the public and also consumed by our services, including placemarks the BC Data Catalogue which uses the WMS for map previews of spatial data.\r\n\r\n### Story\r\nA a Government of B.C. spatial web developer, I want GeoServer to correctly locate KML placemarks so I can display spatial information accessible to the public via KML/Google Earth.\r\n\r\n\r\n## Acceptance Criteria\r\n\r\n\r\n1. KML Placesmarks locate properly when there is a KMSCORE=0 and mode=refresh for SDE EPSG:3005 polygon data.\r\n2. The solutions works within the GeoServer 2.8 code base.\r\n\r\n\r\n## How to contribute\r\n\r\nWe will evaluate each pull request and choose the best solution to the issue based on the acceptance criteria. Submit the best solution and you could be paid $1000.\r\n\r\nPlease read the [Contribution Guidelines](https://github.com/bcgov/databc-web-map-services/blob/master/CONTRIBUTING.md) for the Terms that set the rules for participation in a Pay for Pull, including how you’ll get paid if you are successful.\r\n\r\nHave questions? Please post your questions in the comments section below this issue.\r\n\r\nIf you are interested in working on this issue, please let us know by posting a comment below.\r\n\r\nAnd check out our [Partners page](https://bcdevexchange.org/programs/DataBC%20Web%20Mapping) for more information on our work.\r\n",
      "program": "DataBC Web Mapping",
      "skill": [
        "GeoServer",
        "Java"
      ],
      "earn": [
        "$1000"
      ]
    },
    {
      "url": "https://api.github.com/repos/bcgov/interactive-infographic/issues/2",
      "repository_url": "https://api.github.com/repos/bcgov/interactive-infographic",
      "labels_url": "https://api.github.com/repos/bcgov/interactive-infographic/issues/2/labels{/name}",
      "comments_url": "https://api.github.com/repos/bcgov/interactive-infographic/issues/2/comments",
      "events_url": "https://api.github.com/repos/bcgov/interactive-infographic/issues/2/events",
      "html_url": "https://github.com/bcgov/interactive-infographic/issues/2",
      "id": 159285723,
      "number": 2,
      "title": "Interactive web app prototype",
      "user": {
        "login": "lmullane",
        "id": 12040839,
        "avatar_url": "https://avatars.githubusercontent.com/u/12040839?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lmullane",
        "html_url": "https://github.com/lmullane",
        "followers_url": "https://api.github.com/users/lmullane/followers",
        "following_url": "https://api.github.com/users/lmullane/following{/other_user}",
        "gists_url": "https://api.github.com/users/lmullane/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lmullane/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lmullane/subscriptions",
        "organizations_url": "https://api.github.com/users/lmullane/orgs",
        "repos_url": "https://api.github.com/users/lmullane/repos",
        "events_url": "https://api.github.com/users/lmullane/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lmullane/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/bcgov/interactive-infographic/labels/$1000",
          "name": "$1000",
          "color": "0052cc"
        },
        {
          "url": "https://api.github.com/repos/bcgov/interactive-infographic/labels/Graphic%20Design",
          "name": "Graphic Design",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/interactive-infographic/labels/help%20wanted",
          "name": "help wanted",
          "color": "128A0C"
        },
        {
          "url": "https://api.github.com/repos/bcgov/interactive-infographic/labels/HTML",
          "name": "HTML",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/interactive-infographic/labels/Java",
          "name": "Java",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/interactive-infographic/labels/Jquery",
          "name": "Jquery",
          "color": "eb6420"
        },
        {
          "url": "https://api.github.com/repos/bcgov/interactive-infographic/labels/UI/UX",
          "name": "UI/UX",
          "color": "eb6420"
        }
      ],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 23,
      "created_at": "2016-06-08T22:08:22Z",
      "updated_at": "2016-07-21T17:39:14Z",
      "closed_at": "2016-07-21T17:26:50Z",
      "body": "# Background\r\nThe OCIO is looking for the development of an online infographic for users to interact with. The purpose is to clearly convey multi-dimensional information in a user-friendly, interactive, digital format. \r\n\r\nThe work entails the development of a working prototype of a dynamic version of the [OCIO Strategic FrameWork diagram](https://raw.githubusercontent.com/bcgov/interactive-infographic/master/wireframe/OCIO_Strategy_Framework.png). The prototype must enable the layout and content to change as the strategy may change over time. \r\n\r\nSee the [Readme](https://github.com/bcgov/interactive-infographic/blob/master/README.md) for more info.\r\n\r\n### Story\r\nAs a product owner, I want to be able to create a working prototype of an interactive web-app so that that I can improve the experience and understanding of government strategy by using a visual, interactive digital format.\r\n\r\n## Acceptance Criteria\r\n\r\n\r\n1. Develop a working prototype of a dynamic version of the [OCIO Strategic FrameWork diagram](https://raw.githubusercontent.com/bcgov/interactive-infographic/master/wireframe/OCIO_Strategy_Framework.png). See this [wireframe](https://github.com/bcgov/interactive-infographic/blob/master/wireframe/wireframe.png) that illustrates how the interactive infographic might be structured.\r\n2. Allow the insertion and deletion of content boxes (i.e. rows, see [wireframe](https://github.com/bcgov/interactive-infographic/blob/master/wireframe/wireframe.png)).\r\n3. Allow the insertion and deletion of content elements (i.e. see [wireframe](https://github.com/bcgov/interactive-infographic/blob/master/wireframe/wireframe.png)).\r\n4. Content box should have the ability to contain multiple content elements that scale according to the number of content elements. Challenge us on this one if it's unrealistic.\r\n5. Allow the insertion and deletion of graphics (and perhaps text) into the content elements.\r\n6. When a user clicks on a content element (every row, or content box, should have this capability), an accordion window will expand/appear underneath. This [second diagram](https://github.com/bcgov/interactive-infographic/blob/master/wireframe/user-interaction.png) illustrates how a user might interact with the infographic.\r\n7. Allow the insertion and deletion of content in accordion windows, including text and hyperlinks (possibly graphics).\r\n8. Support vector graphics. You can use example graphics and text for the prototype.\r\n9. Provide the final product in a format that can be run on any computer (localhost) through any modern web-browser.\r\n10. Device agnostic and responsive.\r\n11. Use of commonly known, open web frameworks.\r\n\r\n## How to contribute\r\n\r\nWe will evaluate each pull request and choose the best solution to the issue based on the acceptance criteria. Submit the best solution and you could be paid $1000.\r\n\r\nMore than one pull request may be considered for payment on this issue.\r\n\r\nPlease read the [Contribution Guidelines](https://github.com/bcgov/interactive-infographic/blob/master/CONTRIBUTING.md) for the Terms that set the rules for participation in a Pay for Pull, including how you’ll get paid if you are successful.\r\n\r\nHave questions? Please post your questions in the comments section below this issue.\r\n\r\nAnd check out our [Partners page](https://bcdevexchange.org/programs/OCIO%20Tech%20Strategies)  for more information on our work.\r\n",
      "program": "OCIO Tech Strategies",
      "skill": [
        "Graphic Design",
        "HTML",
        "Java",
        "Jquery",
        "UI/UX"
      ],
      "earn": [
        "$1000"
      ]
    }
  ],
  "inprogress": [],
  "blocked": []
}
